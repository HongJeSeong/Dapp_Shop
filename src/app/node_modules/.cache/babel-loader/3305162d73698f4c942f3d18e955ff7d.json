{"ast":null,"code":"import _regeneratorRuntime from \"/usr/src/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/usr/src/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/usr/src/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/usr/src/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/usr/src/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/usr/src/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/usr/src/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/usr/src/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/usr/src/app/src/components/Settings.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport DisplayImage from \"./DisplayImage\";\n\nvar Settings =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Settings, _Component);\n\n  function Settings(props) {\n    var _this;\n\n    _classCallCheck(this, Settings);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Settings).call(this, props));\n    _this.state = {\n      image: null\n    };\n    _this.path = _this.path.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Settings, [{\n    key: \"path\",\n    value: function () {\n      var _path = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(data) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.setState({\n                  image: data\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function path(_x) {\n        return _path.apply(this, arguments);\n      }\n\n      return path;\n    }()\n  }, {\n    key: \"getTransactionList\",\n    value: function getTransactionList() {\n      var blocks = this.props.blocks;\n      var block_transactions;\n      var block_number;\n      var block_blockHash;\n      var block_from;\n      var block_to;\n      var block_gas;\n      var block_gasPrice;\n      var block_hash;\n      var block_input;\n      var block_nonce;\n      var block_r;\n      var block_s;\n      var block_v;\n      var result = \"\"; //Get all blocks infomation\n\n      /*\n      for(var i=0;i<blocks.length;i++){\n       \tfor (var key in blocks[i]){\n       \tconsole.log(key+\":\"+blocks[i][key]);\n      \t}\n      }\n      */\n\n      for (var i = 0; i < blocks.length; i++) {\n        block_transactions = blocks[i][\"transactions\"];\n        block_number = block_transactions[\"number\"];\n        block_blockHash = block_transactions[\"blockHash\"];\n        block_from = block_transactions[\"from\"];\n        block_to = block_transactions[\"to\"];\n        block_gas = block_transactions[\"gas\"];\n        block_gasPrice = block_transactions[\"gasPrice\"];\n        block_hash = block_transactions[\"hash\"];\n        block_input = block_transactions[\"input\"];\n        block_nonce = block_transactions[\"nonce\"];\n        block_r = block_transactions[\"r\"];\n        block_s = block_transactions[\"s\"];\n        block_v = block_transactions[\"v\"];\n        result += \"<div className='card'><div className='card-header'>#.\" + block_number + \" \" + blockHash + \"</div></div>\";\n      }\n\n      return;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"\\uC0C1\\uD488 \\uB4F1\\uB85D\"), React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit:\n        /*#__PURE__*/\n        function () {\n          var _ref = _asyncToGenerator(\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee2(event) {\n            var name, price, img, formData, res, imagePath;\n            return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    event.preventDefault();\n                    name = _this2.productName.value;\n                    price = window.web3.utils.toWei(_this2.productPrice.value.toString(), 'Ether');\n                    img = _this2.state.image;\n                    formData = new FormData();\n                    formData.append('file', img);\n                    _context2.next = 8;\n                    return axios.post(\"http://127.0.0.1:4000/api/upload\", formData);\n\n                  case 8:\n                    res = _context2.sent;\n                    imagePath = res[\"data\"][\"imgPath\"].toString();\n\n                    _this2.props.createProduct(name, price, imagePath);\n\n                  case 11:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, _callee2);\n          }));\n\n          return function (_x2) {\n            return _ref.apply(this, arguments);\n          };\n        }(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group mr-sm-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(DisplayImage, {\n        imagePath: this.path,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group mr-sm-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"productName\",\n        ref: function ref(input) {\n          _this2.productName = input;\n        },\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"product name\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group mr-sm-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"productPrice\",\n        type: \"text\",\n        ref: function ref(input) {\n          _this2.productPrice = input;\n        },\n        className: \"form-control\",\n        placeholder: \"product price (in ether)\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"card-footer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-block btn-outline-success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"\\uC0C1\\uD488 \\uB4F1\\uB85D\")))))), React.createElement(\"div\", {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"\\uD2B8\\uB79C\\uC7AD\\uC158 \\uB9AC\\uC2A4\\uD2B8\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, this.getTransactionList())));\n    }\n  }]);\n\n  return Settings;\n}(Component);\n\nexport default Settings;","map":{"version":3,"sources":["/usr/src/app/src/components/Settings.js"],"names":["React","Component","axios","DisplayImage","Settings","props","state","image","path","bind","data","setState","blocks","block_transactions","block_number","block_blockHash","block_from","block_to","block_gas","block_gasPrice","block_hash","block_input","block_nonce","block_r","block_s","block_v","result","i","length","blockHash","event","preventDefault","name","productName","value","price","window","web3","utils","toWei","productPrice","toString","img","formData","FormData","append","post","res","imagePath","createProduct","input","getTransactionList"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport DisplayImage from \"./DisplayImage\";\nclass Settings extends Component {\nconstructor(props) {\n    super(props);\n    this.state = {\n      image: null\n    };\n    this.path = this.path.bind(this);\n\n  }\n  async path(data){\n    await this.setState({\n        image: data\n      });\n  }\n  getTransactionList(){\n\t  let blocks = this.props.blocks;\n          let block_transactions;\n          let block_number;\n          let block_blockHash;\n          let block_from;\n          let block_to;\n\t  let block_gas;\n          let block_gasPrice;\n          let block_hash;\n          let block_input;\n          let block_nonce;\n          let block_r;\n          let block_s;\n\t  let block_v;\n\n\t  let result=\"\";\n\n\t  //Get all blocks infomation\n\t  /*\n\t  for(var i=0;i<blocks.length;i++){\n\n\t  \tfor (var key in blocks[i]){\n\t\t  \tconsole.log(key+\":\"+blocks[i][key]);\n\t  \t}\n\t  }\n*/\n\t  for(var i=0; i<blocks.length;i++){\n\t\t  block_transactions = blocks[i][\"transactions\"];\n\t\t  block_number = block_transactions[\"number\"];\n\t\t  block_blockHash = block_transactions[\"blockHash\"];\n\t\t  block_from = block_transactions[\"from\"];\n\t\t  block_to = block_transactions[\"to\"];\n\t\t  block_gas = block_transactions[\"gas\"];\n\t\t  block_gasPrice = block_transactions[\"gasPrice\"];\n\t\t  block_hash = block_transactions[\"hash\"];\n\t\t  block_input = block_transactions[\"input\"];\n\t\t  block_nonce = block_transactions[\"nonce\"];\n\t\t  block_r = block_transactions[\"r\"];\n\t\t  block_s = block_transactions[\"s\"];\n\t\t  block_v = block_transactions[\"v\"];\n\n\t\t  result+=\"<div className='card'><div className='card-header'>#.\"+block_number+\" \"+blockHash+\"</div></div>\";\n\n\t  }\n\t  return;\n\n  }\n  render () {\n          return (\n<div className=\"row\">\n    <div className=\"col-6\">\n\t\t  <hr/>\n\t<h1>상품 등록</h1>\n\t\t  <div className=\"card\">\n\t\t  <div className=\"card-body\">\n                <form onSubmit={ async (event) => {\n                    event.preventDefault();\n                    const name = this.productName.value;\n                    const price = window.web3.utils.toWei(this.productPrice.value.toString(), 'Ether');\n\t\t    const img = this.state.image;\n\t\t    const formData = new FormData();\n\t\t    formData.append('file',img);\n\t\t    const res = await axios.post(\"http://127.0.0.1:4000/api/upload\", formData);\n\t            const imagePath =(res[\"data\"][\"imgPath\"]).toString();\n                    this.props.createProduct(name, price, imagePath);\n                } }>\n\n\t\t    <div className=\"form-group mr-sm-2\">\n\t\t\t<DisplayImage\n\t\t\timagePath={ this.path }/>\n                    </div>\n\n                    <div className=\"form-group mr-sm-2\">\n                        <input\n                            id=\"productName\"\n                            ref={(input) => { this.productName = input }}\n                            type=\"text\"\n                            className=\"form-control\"\n                            placeholder=\"product name\"\n                            required />\n                    </div>\n\n                    <div className=\"form-group mr-sm-2\">\n                        <input\n                            id=\"productPrice\"\n                            type=\"text\"\n                            ref={(input) => { this.productPrice = input }}\n                            className=\"form-control\"\n                            placeholder=\"product price (in ether)\"\n                            required />\n                    </div>\n\t\t    <div className=\"card-footer\">\n                    <button type=\"submit\" className=\"btn btn-block btn-outline-success\">\n                        상품 등록\n                    </button>\n\t\t    </div>\n                </form>\n\t      </div>\n\t     </div>\n     </div>\n    <div className=\"col-6\">\n\t\t  <hr/>\n\t\t  <h1>트랜잭션 리스트</h1>\n\t\t  <p>{this.getTransactionList()}</p>\n\n    </div>\n\n</div>\n);\n    }\n\n}\n\nexport default Settings;\n\n"]},"metadata":{},"sourceType":"module"}